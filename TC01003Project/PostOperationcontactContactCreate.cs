
// <copyright file="PreValidationcontactCreate.cs" company="">
// Copyright (c) 2024 All Rights Reserved
// </copyright>
// <author></author>
// <date>6/21/2024 10:18:55 AM</date>
// <summary>Implements the PreValidationcontactCreate Plugin.</summary>
// <auto-generated>
//     This code was generated by a tool.
// </auto-generated>

using System;
using System.Collections.Generic;
using System.ServiceModel;
using Microsoft.Xrm.Sdk;

namespace TC_01003.TC01003Project
{

    /// <summary>
    /// PreValidationcontactCreate Plugin.
    /// </summary>    
    public class PostOperationcontactContactCreate : PluginBase
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PreValidationcontactCreate"/> class.
        /// </summary>
        /// <param name="unsecure">Contains public (unsecured) configuration information.</param>
        /// <param name="secure">Contains non-public (secured) configuration information.</param>
        public PostOperationcontactContactCreate(string unsecure, string secure)
            : base(typeof(PostOperationcontactContactCreate))
        {
            
           // TODO: Implement your custom configuration handling.
        }


        /// <summary>
        /// Main entry point for he business logic that the plug-in is to execute.
        /// </summary>
        /// <param name="localContext">The <see cref="LocalPluginContext"/> which contains the
        /// <see cref="IPluginExecutionContext"/>,
        /// <see cref="IOrganizationService"/>
        /// and <see cref="ITracingService"/>
        /// </param>
        /// <remarks>
        /// </remarks>
        protected override void ExecuteCdsPlugin(ILocalPluginContext localContext)
        {
            if (localContext == null)
            {
                throw new InvalidPluginExecutionException(nameof(localContext));
            }           
            // Obtain the tracing service
            ITracingService tracingService = localContext.TracingService;

            try
            { 
                // Obtain the execution context from the service provider.  
                IPluginExecutionContext context = (IPluginExecutionContext)localContext.PluginExecutionContext;

                // Obtain the organization service reference for web service calls.  
                IOrganizationService currentUserService = localContext.CurrentUserService;

                if (context.InputParameters.Contains("Target") &&
                    context.InputParameters["Target"] is Entity)
                {
                    var contact = context.InputParameters["Target"] as Entity;
                    var testCustomAction = new OrganizationRequest()
                    {
                        RequestName = "new_SendCustomEmailAction"
                    };
                    testCustomAction.Parameters.Add("RegardingContact",
                        contact.ToEntityReference());
                    testCustomAction.Parameters.Add("Sender",
                        new EntityReference("systemuser", context.UserId));
                    testCustomAction.Parameters.Add("Subject", $"New Contact {contact["fullname"]} created {contact["createdon"]}");
                    testCustomAction.Parameters.Add("Body", $"New contact created - https://orgd517a8d5.crm11.dynamics.com/main.aspx?appid=cf5b42fc-d128-ef11-840a-002248c82767&pagetype=entityrecord&etn=contact&id={contact["contactid"].ToString()}");
                    testCustomAction.Parameters.Add("RecepientEmail", contact["emailaddress1"]);

                    var response = currentUserService.Execute(testCustomAction);
                }
            }
            // Only throw an InvalidPluginExecutionException. Please Refer https://go.microsoft.com/fwlink/?linkid=2153829.
            catch (Exception ex)
            {
                tracingService?.Trace("An error occurred executing Plugin TC_01003.TC01003Project.PreValidationcontactCreate : {0}", ex.ToString());
                throw new InvalidPluginExecutionException("An error occurred executing Plugin TC_01003.TC01003Project.PreValidationcontactCreate .", ex);
            }	
        }
    }
}
